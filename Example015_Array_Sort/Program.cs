// Сортировка массивов методом выбора min или max через цикл for

//1. Найти позицию минимального элемента в неотсортированной части массива
//2. Произвести обмен этого значения со значением первой неотсортированной позиции
//3. Повторять пока есть неотсортированные элементы

int[] array = { 1, 5, 4, 3, 2, 6, 7, 1, 1 };  // задаем новый массив с именем array и типом данных int тоеть содержащий целык числа

void PrintArray(int[] array)  // создаем метод для вывода на экран массива и в качестве аргумента передаем ему наш недавно созданный массив int[] arrayName
{
    int count = array.Length;  // создаем переменную count куда помещаем значение длинны массива тоесть значение максимального индекса

    for (int i = 0; i < count; i++)  // запускаем цикл for который пробежит по нашему массиву от начала и до максимального индекса заложенного в переменную count
    {
        System.Console.Write($"{array[i]} "); // пока работает цикл в консоль выводится наш массив
    }
    System.Console.WriteLine(); // вывод пустой строки для красоты
}

void SelectionSort(int[] array)   // создаем метод который отсортирует наш массив с именем array поэтому в качестве аргументы передаем методу сам массив с указанием его типа данных - int[] array
{
    for (int i = 0; i < array.Length - 1; i++)  // создаем цикл который будет пробегать по нашему массиву array
    {
        int minPosition = i; // задаем переменную minPosition которая примет в себя значение индекса i с минимальным элементом массива
        
        for (int j = i + 1; j < array.Length; j++)  // создаем цикл for внутри цикала for и не забываем что переменная i во внутреннем цикле должна быть заменена на собственную переменную например j, а также поскольку нам не надо начинать с самого первого элемента ибо он уже отсортирован мы в качестве индекса для внутреннего цикла используем i из внешнего плюс единица - j = i + 1
        {
            if (array[j] < array[minPosition]) // гоняем внутренний массив и ищем минимальное сзначение элемента
            {
                minPosition = j;
            }
        }
      int temporary = array[i]; // (кладем в переменную temp значение рабочей точки)задаем переменную temporary чтобы через нее обменивать значения переменной minPosition и рабочей точки array[i]
      array[i] = array[minPosition]; // кладем в рабочую переменную array[i] значение array[minPosityion]
      array[minPosition] = temporary; // кладем в minPosition значение temp которое содержит в себе значение рабочей переменной i
    }
}

PrintArray(array);
SelectionSort(array);
PrintArray(array);